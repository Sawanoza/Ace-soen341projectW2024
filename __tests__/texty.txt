describe("POST /reservations", () => {
  it("responds with JSON containing the newly created reservation", async () => {
    // Define the reservation data to send in the request
    const reservationData = {
      vehicleId: "2",
      userId: "8",
      startTime: "2024-03-10 09:00:00",
      endTime: "2024-03-14 15:45:00",
    };

    // Send a POST request to create a new reservation
    const response = await request(app)
      .post("/hasreservation")
      .send(reservationData);

    expect(response.statusCode).toBe(200);
    expect(response.body).toBeDefined();
    expect(response.body.vehicleId).toBe(reservationData.vehicleId);
    expect(response.body.userId).toBe(reservationData.userId);
    expect(response.body.startTime).toBe(reservationData.startTime);
    expect(response.body.endTime).toBe(reservationData.endTime);
  });
});

describe("GET /reservations", () => {
  it("responds with JSON containing all reservations", async () => {
    const response = await request(app).get("/reservations");
    expect(response.statusCode).toBe(200);
    expect(response.body).toBeDefined();
  });
});